name: Build JavaFX App

on:
  push:
    branches:
      - main
  release:
    types: [created]

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Build fat JAR with Maven
        run: mvn -B clean package shade:shade -DskipTests

      - name: Verify shaded jar and main class
        shell: pwsh
        run: |
          # Find the shaded JAR
          $JAR = Get-ChildItem target/*-shaded.jar | Select-Object -First 1
          echo "The JAR has value of $JAR"
          
          # Check if the JAR file was found
          if ($null -eq $JAR) {
              throw "Error: The shaded JAR file was not found in the 'target' directory."
          }

          # Search for the main class and capture the output
          $ClassExists = jar tf $JAR.FullName | Select-String "sample/Starter.class"

          # Explicitly throw an error if the class is not found
          if ($null -eq $ClassExists) {
              throw "Error: The class 'sample.Starter' was not found in the shaded JAR. Please check your pom.xml."
          }

      - name: Download JavaFX SDK
        run: |
          curl -L https://download2.gluonhq.com/openjfx/21.0.2/openjfx-21.0.2_windows-x64_bin-sdk.zip -o javafx.zip
          tar -xf javafx.zip

      - name: Create runtime image (Java 21 + JavaFX)
        shell: pwsh
        run: |
          $env:PATH="$env:JAVA_HOME/bin;$env:PATH"
          jlink --module-path "$env:JAVA_HOME/jmods;javafx-sdk-21.0.2/lib" `
                --add-modules javafx.base,javafx.controls,javafx.fxml,javafx.graphics `
                --output runtime

          if (-Not (Test-Path "runtime/bin/java.exe")) {
            throw "Error: JRE was not created correctly. Missing java.exe."
          }
          Write-Host "Success: JRE found at runtime/bin/java.exe"

      - name: Print build directory tree
        shell: pwsh
        run: |
          Write-Host "--- Directory Tree ---"
          Get-ChildItem -Recurse
          Write-Host "----------------------"

      - name: Package Windows installer with Java 17
        shell: pwsh
        run: |
          $JAR = Get-ChildItem target/*-shaded.jar | Select-Object -First 1
          echo "The main-jar has value of $JAR"
          echo "The name has value of $JAR.Name"
          $ICON_PATH = "installer/icon.ico"
          
          jpackage `
            --name MCL `
            --app-version 1.0.0 `
            --input target `
            --main-jar $JAR.Name `
            --main-class sample.Starter `
            --type msi `
            --win-menu `
            --win-shortcut `
            --runtime-image runtime `
            --dest target `
            --icon "$ICON_PATH" `
            --java-options "-Dprism.order=d3d,sw" `
            --java-options "-Dprism.verbose=true"

      - name: Upload installer
        uses: actions/upload-artifact@v4
        with:
          name: mcl-installer
          path: target/*.msi
